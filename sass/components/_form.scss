.form {

    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }

    &__input {
        font-size: 1.5rem;

        // Inherit the parent font-family 
        font-family: inherit;

        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;

        // To compensate for the 3px.  Without this, the email address and full name text will shift 3px. 
        border-bottom: 3px solid transparent;

        width: 40%;
        display: block;
        transition: all .5s;

        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }
    }

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;

        // Set the animation for the &__input:placeholder-shown + &__label
        transition: all .3s;
    }

    // This will not work because both input and label are siblings.  They are the child of the form__group
    // &__input:placeholder-shown &__label {}
    // '+ &__label' is the ADJACENT SIBLING SELECTOR.  This selects the sibling right after '&__input' 
    &__input:placeholder-shown + &__label {
        // opacity: 0; will make it invisible however it is still there.  visibility:  hidden; will make it disappear.  We need to use opacity as well because we want to ANIMATE the element.
        opacity: 0;
        visibility: hidden;

        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 49%;
        display: inline-block;
    }

    // Hide the radio input buttons 
    &__radio-input {
        display: none;
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;

        // position: relative on the parent so that the child (&__radio-button) can be position: absolute
        position: relative;

        padding-left: 4.5rem;
    }

    &__radio-button {
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;

        // this will make the button a complete circle
        display: inline-block;

        // use position: absolute to put the element in the circle
        position: absolute;
        top: -.4rem;
        left: 0;

        &::after {
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }
}