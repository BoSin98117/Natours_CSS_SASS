.row {
    max-width: $grid-width;
    
    /* Center the row in the viewport.  This will center a block element inside of another block element.  Here '0' is for the top and bottom margin and left and right is AUTO.  Setting it to AUTO means that the browser will automatically calculate the left and right margin which will result in the element being CENTERED. */
    margin: 0 auto;

    /* We want the last div to not have a margin-bottom. Use the :not() psuedo operator. :not(:last-child) means that we select everything except the last child.  This means that all other elements will have a margin-bottom except the last child. */
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    /* Attribute Selector [].  We want to select by CLASS attribute.
    ^ - means START WITH.  We want all CLASS that starts with COL-
    * - select any CLASS that contains COL-
    $ - select all CLASS that ends with COL- */
    [class^="col-"] {
        float: left;

        /* Every element except the last-child will have a margin-right */
        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port) {
                margin-right: 0;    // remove right margin
                margin-bottom: $gutter-vertical-small;
            }
        }

        // Use media query to change the elements from columns to rows.  Entire page will have 1 column.
        @include respond(tab-port) {
            // !important so that it will override 
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}